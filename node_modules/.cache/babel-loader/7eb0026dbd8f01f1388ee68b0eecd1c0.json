{"remainingRequest":"E:\\demo\\pikaz-excel-js\\node_modules\\babel-loader\\lib\\index.js!E:\\demo\\pikaz-excel-js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\demo\\pikaz-excel-js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\demo\\pikaz-excel-js\\src\\plugin\\excelImport\\excelImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\demo\\pikaz-excel-js\\src\\plugin\\excelImport\\excelImport.vue","mtime":1610165480628},{"path":"E:\\demo\\pikaz-excel-js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\pikaz-excel-js\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\demo\\pikaz-excel-js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\demo\\pikaz-excel-js\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["excelImport.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n * @Author: zouzheng\r\n * @Date: 2020-04-30 15:05:31\r\n * @LastEditors: zouzheng\r\n * @LastEditTime: 2020-10-28 00:47:07\r\n * @Description: 这是excel导入组件（页面）\r\n -->\r\n<template>\r\n    <div\r\n        class=\"excel-import\"\r\n        @click=\"importFileClick\"\r\n    >\r\n        <input\r\n            type=\"file\"\r\n            @change=\"importFile(this)\"\r\n            :id=\"id\"\r\n            style=\"display: none\"\r\n            accept=\".xls,.xlsx\"\r\n        />\r\n        <slot></slot>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from \"xlsx\";\r\nexport default {\r\n    props: {\r\n        // 表名\r\n        sheetNames: Array,\r\n        // 是否移除空格\r\n        removeBlankspace: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        // 是否移出特殊字符\r\n        removeSpecialchar: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        //  导入前\r\n        beforeImport: {\r\n            type: Function,\r\n            // file为导入文件\r\n            default: file => {}\r\n        },\r\n        // 导入时\r\n        onProgress: {\r\n            type: Function,\r\n            default: (event, file) => {}\r\n        },\r\n        // 状态改变\r\n        onChange: {\r\n            type: Function,\r\n            default: file => {}\r\n        },\r\n        onSuccess: {\r\n            type: Function,\r\n            // response为生成的json数据\r\n            default: (response, file) => {}\r\n        },\r\n        onError: {\r\n            type: Function,\r\n            // err为错误信息\r\n            default: (err, file) => {}\r\n        }\r\n    },\r\n    components: {},\r\n    data() {\r\n        return {\r\n            imFile: \"\",\r\n            // 枚举类\r\n            enum: {\r\n                // 文件类型\r\n                bookType: [\"xlsx\", \"xls\"]\r\n            },\r\n            id: \"\"\r\n        };\r\n    },\r\n    created() {\r\n        this.id = Math.random().toString();\r\n    },\r\n    mounted() {\r\n        this.imFile = document.getElementById(this.id);\r\n    },\r\n    methods: {\r\n        /**\r\n         * @name: 点击导入按钮\r\n         * @param {type}\r\n         * @return:\r\n         */\r\n        importFileClick() {\r\n            this.imFile.click();\r\n        },\r\n        /**\r\n         * @name: 导入文件\r\n         * @param {type}\r\n         * @return:\r\n         */\r\n        importFile() {\r\n            // 导入excel\r\n            const obj = this.imFile;\r\n            // 无导入文件\r\n            if (!obj.files) {\r\n                this.onError(\"No imported file\");\r\n                return;\r\n            }\r\n            const file = obj.files[0];\r\n            // 导入前\r\n            const beforeImport = this.beforeImport(file);\r\n            this.onChange(file);\r\n            if (beforeImport === false) {\r\n                return;\r\n            }\r\n            // 文件类型必须为xlsx或者xls\r\n            const bookType = file.name.substr(\r\n                file.name.length - 4,\r\n                file.name.length - 1\r\n            );\r\n            const type = this.enum.bookType.some(e => {\r\n                if (bookType.indexOf(e) !== -1) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!type) {\r\n                this.onError('The file type must be \"xlsx\" or \"xls\"', file);\r\n                return;\r\n            }\r\n            const reader = new FileReader();\r\n            const that = this;\r\n            // 导入时\r\n            reader.onprogress = e => {\r\n                this.onProgress(e, file);\r\n            };\r\n            // 导入完成\r\n            reader.onload = e => {\r\n                const data = e.target.result;\r\n                if (that.rABS) {\r\n                    that.wb = XLSX.read(btoa(this.fixdata(data)), {\r\n                        // 手动转化\r\n                        type: \"base64\"\r\n                    });\r\n                } else {\r\n                    that.wb = XLSX.read(data, {\r\n                        type: \"binary\"\r\n                    });\r\n                }\r\n                let json = [];\r\n                // 查询对应表名数据\r\n                if (that.sheetNames) {\r\n                    that.sheetNames.forEach(name => {\r\n                        const sheetIndex = that.wb.SheetNames.findIndex(\r\n                            s => s === name\r\n                        );\r\n                        if (sheetIndex !== -1) {\r\n                            const data = XLSX.utils.sheet_to_json(\r\n                                that.wb.Sheets[that.wb.SheetNames[sheetIndex]]\r\n                            );\r\n                            json.push({ sheetName: name, data });\r\n                        }\r\n                    });\r\n                } else {\r\n                    // 查询全部数据\r\n                    that.wb.SheetNames.forEach(item => {\r\n                        const data = XLSX.utils.sheet_to_json(\r\n                            that.wb.Sheets[item]\r\n                        );\r\n                        json.push({ sheetName: item, data });\r\n                    });\r\n                }\r\n                json = this.dealData(json);\r\n                that.importData(json, file);\r\n            };\r\n            if (this.rABS) {\r\n                reader.readAsArrayBuffer(file);\r\n            } else {\r\n                reader.readAsBinaryString(file);\r\n            }\r\n        },\r\n        /**\r\n         * @name: 处理导入数据\r\n         * @param {type}\r\n         * @return:\r\n         */\r\n        dealData(data) {\r\n            if (this.removeBlankspace || this.removeSpecialchar) {\r\n                const json = data.map(item => {\r\n                    const itemData = item.data.map(i => {\r\n                        Object.keys(i).forEach(key => {\r\n                            if (\r\n                                this.removeBlankspace &&\r\n                                Object.prototype.toString.call(i[key]) ===\r\n                                    \"[object String]\"\r\n                            ) {\r\n                                // 字符串去除空格\r\n                                i[key] = i[key].replace(/\\s*/g, \"\");\r\n                            }\r\n                            // 去除特殊字符\r\n                            if (\r\n                                this.removeSpecialchar &&\r\n                                i[key] &&\r\n                                Object.prototype.toString.call(i[key]) !==\r\n                                    \"[object Boolean]\"\r\n                            ) {\r\n                                i[key] = i[key]\r\n                                    .toString()\r\n                                    .replace(\r\n                                        /[\\u200b-\\u200f\\uFEFF\\u202a-\\u202e]/g,\r\n                                        \"\"\r\n                                    );\r\n                            }\r\n                        });\r\n                        return i;\r\n                    });\r\n                    return { ...item, data: itemData };\r\n                });\r\n                return json;\r\n            }\r\n            return data;\r\n        },\r\n        /**\r\n         * @name: 导入数据\r\n         * @param {type}\r\n         * @return:\r\n         */\r\n        importData(data, file) {\r\n            this.imFile.value = \"\";\r\n            if (data.length <= 0) {\r\n                // 导入失败\r\n                this.onChange(file);\r\n                this.onError(\"The import failed\", file);\r\n                return;\r\n            } else {\r\n                //导入成功\r\n                this.onChange(file);\r\n                this.onSuccess(data, file);\r\n                return;\r\n            }\r\n        },\r\n        /**\r\n         * @name: 文件流转BinaryString\r\n         * @param {type}\r\n         * @return:\r\n         */\r\n        fixdata(data) {\r\n            const o = \"\";\r\n            const l = 0;\r\n            const w = 10240;\r\n            for (; l < data.byteLength / w; ++l) {\r\n                o += String.fromCharCode.apply(\r\n                    null,\r\n                    new Uint8Array(data.slice(l * w, l * w + w))\r\n                );\r\n            }\r\n            o += String.fromCharCode.apply(\r\n                null,\r\n                new Uint8Array(data.slice(l * w))\r\n            );\r\n            return o;\r\n        }\r\n    },\r\n    computed: {},\r\n    watch: {}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/plugin/excelImport"}]}